# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        if: matrix.os == 'macos-latest'
        run: |
          python -m pip install --upgrade pip
          pip install flake8 gnureadline
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Install dependencies
        if: matrix.os != 'macos-latest'
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude examples/
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Generate binary
        if: matrix.os == 'windows-latest'
        run: |
          pyinstaller --onefile --noconfirm --distpath ./ob2sync-windows.exe --clean ob2sync_win.spec
      - name: Generate binary
        if: matrix.os == 'ubuntu-latest'
        run: |
          pyinstaller --onefile --noconfirm --distpath ./ --clean ob2sync_linux_x86.spec
      - name: Generate binary
        if: matrix.os == 'windows-latest'
        run: |
          pyinstaller --onefile --noconfirm --distpath ./ --clean ob2sync_macos.spec
      - name: Package binary
        if: matrix.os == 'macos-latest'
        run: |
          chmod +x ob2sync
          mv ob2sync ob2sync-linux-x86
      - name: Upload binary
        uses: actions/upload-artifact@v2
        if: matrix.os == 'ubuntu-latest'
        with:
          name: ob2sync-linux-x86
          path: ob2sync-linux-x86
      - name: Package binary
        if: matrix.os == 'macos-latest'
        run: |
          chmod +x ob2sync
          mv ob2sync ob2sync-macos
      - name: Upload binary
        uses: actions/upload-artifact@v2
        if: matrix.os == 'macos-latest'
        with:
          name: ob2sync-macos
          path: ob2sync-macos
      - name: Upload binary
        uses: actions/upload-artifact@v2
        if: matrix.os == 'windows-latest'
        with:
          name: ob2sync-windows.exe
          path: ob2sync-windows.exe
